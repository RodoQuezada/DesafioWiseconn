var program = require('commander');
var APHK = require('./BHSAPHK');
var version = require('./BHSV');
var Server = require('./BHSGS').Server;
var Plugin = require('./BHSP').Plugin;
var User = require('./BHSU').User;
var log = require("./BHSLR")._system;

'use strict';

module.exports = function() {

  var insecureAccess = false;

  program
    .version(version)
    .option('-P, --plugin-path [path]', 'look for plugins installed at [path] as well as the default locations ([path] can also point to a single plugin)', function(p) { Plugin.addPluginPath(p); })
    .option('-U, --user-storage-path [path]', 'look for bioxhome user files at [path] instead of the default location (~/.bioxhome)', function(p) { User.setStoragePath(p); })
    .option('-D, --debug', 'turn on debug level logging', function() { require('./logger').setDebugEnabled(true) })
    .option('-I, --insecure', 'allow unauthenticated requests (for easier hacking)', function() { insecureAccess = true })
    .parse(process.argv);

  APHK.Start(User.persistPath());
  
  var server = new Server(insecureAccess);

  var signals = { 'SIGINT': 2, 'SIGTERM': 15 };
  Object.keys(signals).forEach(function (signal) {
    process.on(signal, function () {
      log.info("Stopping Bio*X HOME...", signal);
      server._updateCachedAccessories();
      process.exit(128 + signals[signal]);
    });
  });

  server.run();
}
