'use strict';
var crypto = require('crypto');
var uuid = require('./BHSAPHK').uuid;
var inherits = require('util').inherits;
var EventEmitter = require('events').EventEmitter;

function BridgeSetupSession(stateChar, controlChar) {
  this.validSession = false
  this.sessionUUID = uuid.generate(crypto.randomBytes(32));
  this.stateChar = stateChar;
  this.controlChar = controlChar;
  this.transactionID = 0;
  this.preferedLanguage = "en-US";
  this.lastResponse = null;
  this.currentStage = 0;
  this.currentPluginName;
  this.currentPlatformInstance;
  this.currentPlatformContext = {};
}

inherits(BridgeSetupSession, EventEmitter);

BridgeSetupSession.prototype.handleWriteRequest = function(request) {
  if (request.type === "Negotiate") {
    this.transactionID = request.tid + 1;
    this.preferedLanguage = request.language;
    this.validSession = true

    var respDict = {
      "tid": this.transactionID,
      "type": "Negotiate",
      "sid": this.sessionUUID,
      "attachment": {
        "type": "Interface",
        "interface": "list",
        "title": "How can I help you?",
        "items": [
          "Manage Platform",
          "Manage Accessories"
        ]
      }
    }

    this.currentStage = 1;

    this.sendResponse(respDict);
  } else if (request.type === "Interface") {
    this.transactionID = request.tid;

    if (this.currentStage === 1) {
      if (request.response.selections[0] === 0) {
        this.presentManagePlatformMenu();
      } else if (request.response.selections[0] === 1) {
        this.presentManageAccessoryMenu();
      }
    } else if (this.currentStage === 2) {
      var selectedIndex = request.response.selections[0];
      var targetPlatformName = this.listOfPlatforms[selectedIndex];
      var targetPlatform = this.configurablePlatformPlugins[targetPlatformName];

      this.currentPlatformContext = {};
      this.currentPlatformContext.preferedLanguage = this.preferedLanguage;
      this.currentPluginName = targetPlatformName;
      this.currentPlatformInstance = targetPlatform;
      this.currentStage = 3;
      this.currentPlatformInstance.configurationRequestHandler(this.currentPlatformContext, null, this.pluginResponseHandler.bind(this));
    } else if (this.currentStage === 3) {
      this.currentPlatformInstance.configurationRequestHandler(this.currentPlatformContext, request, this.pluginResponseHandler.bind(this));
    } else if (this.currentStage === 4) {
      this.handleManageAccessory(request);
    }
  } else if (request.type === "Terminate") {
    this.transactionID = request.tid;
    this.validSession = false;

    if (this.currentStage === 3) {
      this.currentPlatformInstance.configurationRequestHandler(this.currentPlatformContext, request, this.pluginResponseHandler.bind(this));
    }
  }
}

BridgeSetupSession.prototype.pluginResponseHandler = function(response, type, replace, config) {
  if (config) {
    this.emit('newConfig', type, this.currentPluginName, replace, config);
    this.presentMainMenu();
  } else if (response) {
    this.transactionID += 1;
    response.tid = this.transactionID;
    response.sid = this.sessionUUID;

    this.sendResponse(response);
  }
}

BridgeSetupSession.prototype.presentMainMenu = function() {
  this.currentStage = 1;

  this.transactionID += 1;

  var respDict = {
    "tid": this.transactionID,
    "sid": this.sessionUUID,
    "type": "Interface",
    "interface": "list",
    "title": "How can I help you?",
    "items": [
      "Manage Platform",
      "Manage Accessories"
    ]
  }

  this.sendResponse(respDict);
}

BridgeSetupSession.prototype.presentManagePlatformMenu = function() {
  var listOfPlatforms = [];
  for (var name in this.configurablePlatformPlugins) {
    listOfPlatforms.push(name);
  }
  this.listOfPlatforms = listOfPlatforms;

  this.transactionID += 1;

  var respDict = {
    "tid": this.transactionID,
    "type": "Interface",
    "sid": this.sessionUUID,
    "interface": "list",
    "title": "Which platform?",
    "items": listOfPlatforms
  }

  this.currentStage = 2;

  this.sendResponse(respDict);
}

BridgeSetupSession.prototype.presentManageAccessoryMenu = function() {
  this.emit('requestCurrentConfig', function(config) {
    this.currentConfig = config;
  }.bind(this));

  this.transactionID += 1;

  var respDict = {
    "tid": this.transactionID,
    "type": "Interface",
    "sid": this.sessionUUID,
    "interface": "instruction",
    "title": "Not Implemented",
    "detail": "This function is not yet implemented.\nPlease manually edit server.json for now.",
    "showNextButton": true,
    "heroImage": ""
  }

  this.currentStage = 4;
  this.sendResponse(respDict);
}

BridgeSetupSession.prototype.handleManageAccessory = function(request) {
  this.presentMainMenu();
}

BridgeSetupSession.prototype.sendResponse = function(response) {
  if (this.validSession) {
    var serializedReponse = JSON.stringify(response);
    var respData = new Buffer(serializedReponse).toString('base64');
    this.lastResponse = respData;
    setTimeout(function() {
      this.controlChar.setValue(respData);
    }.bind(this), 100);
  }
}

BridgeSetupSession.prototype.handleReadRequest = function(callback) {
  callback(null, this.lastResponse);
}

module.exports = {
  SetupSession: BridgeSetupSession
};